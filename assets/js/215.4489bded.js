(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{412:function(t,a,e){"use strict";e.r(a);var s=e(0),o=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("router-link",{attrs:{to:"/metadata/"}},[t._v("Polkadot JS API")]),t._v(" â€º "),e("router-link",{attrs:{to:"/metadata/globals.html"}},[t._v("Globals")])],1),t._v(" "),e("h1",{attrs:{id:"polkadot-js-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#polkadot-js-api"}},[t._v("#")]),t._v(" Polkadot JS API")]),t._v(" "),e("h1",{attrs:{id:"metadata-update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#metadata-update"}},[t._v("#")]),t._v(" metadata update")]),t._v(" "),e("ol",[e("li",[t._v("New branch ðŸ˜ƒ")]),t._v(" "),e("li",[e("code",[t._v('curl -H "Content-Type: application/json" -d \'{"id":1, "jsonrpc":"2.0", "method": "state_getMetadata", "params":[]}\' http://localhost:9933')])]),t._v(" "),e("li",[t._v("Copy the latest version folder (vx) in "),e("code",[t._v("types/Metadata")])]),t._v(" "),e("li",[t._v("Copy the result (hex-only) into "),e("code",[t._v("static.ts")]),t._v(", as of now linked to "),e("code",[t._v("v6/static.ts")])]),t._v(" "),e("li",[t._v("Rust Metadata tests, "),e("code",[t._v("yarn run test packages/types/src/Metadata")])]),t._v(" "),e("li",[t._v("Add new class types as required (find missing in Rust code, add)")]),t._v(" "),e("li",[t._v("Add all classes to "),e("code",[t._v("src/classes.ts")])]),t._v(" "),e("li",[t._v("Repeat 4-6 until passing")]),t._v(" "),e("li",[t._v("Update parsed JSON to actual output version, "),e("code",[t._v("v6/latest.*.json")])]),t._v(" "),e("li",[t._v("All tests")]),t._v(" "),e("li",[t._v("Make PR")])])])}),[],!1,null,null,null);a.default=o.exports}}]);